<Window x:Class="Example.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:locators="clr-namespace:Example.Locators"
        xmlns:handlers="clr-namespace:Example.Handlers"
        xmlns:designers="clr-namespace:Example.Designers"
        
        mc:Ignorable="d"
        Title="Example" Height="450" Width="800">
    <Window.Resources>
        <!--Base style for ItemsControl-->
        <Style TargetType="{x:Type ItemsControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Background="{TemplateBinding Background}">
                            <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                  CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Default style for item in stack presentation-->
        <DataTemplate x:Key="DefaultItemTeplate">
            <Border Name="board" Background="LightBlue" BorderThickness="1" BorderBrush="DodgerBlue" MinHeight="30" MinWidth="30">
                <TextBlock Text="{Binding Path=Value}" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter TargetName="board" Property="BorderBrush" Value="Red" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--Default style for item in wrap presentation-->
        <DataTemplate x:Key="WithMarginItemTemplate">
            <Border Name="board" Background="LightBlue" BorderThickness="1" BorderBrush="DodgerBlue" MinHeight="30" MinWidth="30" Margin="5">
                <TextBlock Text="{Binding Path=Value}" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter TargetName="board" Property="BorderBrush" Value="Red" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--Orientation list-->
        <x:Array x:Key="OrientationList" Type="Orientation">
            <Orientation>Horizontal</Orientation>
            <Orientation>Vertical</Orientation>
        </x:Array>

        <!--Simple path geometry for PathLocator-->
        <PathGeometry x:Key="PathGeometry">
            <PathFigure StartPoint="40, 0" >
                <PolyLineSegment Points="40,90 0,100" />
            </PathFigure>
        </PathGeometry>

        <!--ChartPointStyle-->
        <Style x:Key="ChartPointStyle" TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Fill" Value="DodgerBlue" />
            <Setter Property="StrokeThickness" Value="1" />
            <Setter Property="Stroke" Value="DarkBlue" />
        </Style>
        
        <x:Array x:Key="MoveTypesList" Type="{x:Type handlers:MouseMoveType}">
            <handlers:MouseMoveType>XY</handlers:MouseMoveType>
            <handlers:MouseMoveType>X</handlers:MouseMoveType>
            <handlers:MouseMoveType>Y</handlers:MouseMoveType>
        </x:Array>

        <ControlTemplate x:Key="DiagramTemplate" TargetType="{x:Type ContentControl}">
            <Grid>
                <Slider Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=(locators:DiagramHelper.Value), Mode=TwoWay}" 
                    Minimum="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=(locators:DiagramHelper.Minimum), Mode=TwoWay}" 
                    Maximum="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=(locators:DiagramHelper.Maximum), Mode=TwoWay}" />
                <Rectangle x:Name="PopupPos" HorizontalAlignment="Right" />
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <TabControl>
        <TabItem Header="Controls">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TabControl>
                    <TabItem Header="Stack">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--Without grouping-->
                            <ItemsControl ItemsSource="{Binding Path=Values}" ItemTemplate="{StaticResource DefaultItemTeplate}"
                              Margin="5" ScrollViewer.CanContentScroll="True">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <CustomPanel Background="Transparent" AllowDrop="True" >
                                            <CustomPanel.ItemsLocator>
                                                <locators:StackLocator Orientation="{Binding Path=PanelOrientation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.ItemsLocator>
                                            <CustomPanel.Handlers>
                                                <handlers:SelectRangeMouseHandler Selecting="{Binding Path=Selecting}" 
                                                                                  Contains="{Binding Path=RectContains, UpdateSourceTrigger=PropertyChanged}" />
                                                <handlers:MoveItemMouseHandler MoveUp="{Binding Path=MoveUp}" 
                                                                               StopOnMouseLeave="{Binding Path=StopOnMouseLeave, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.Handlers>
                                        </CustomPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--With grouping-->
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding Path=View}" ItemTemplate="{StaticResource DefaultItemTeplate}" 
                              Margin="5" >
                                <ItemsControl.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Expander IsExpanded="False">
                                                                <Expander.Header>
                                                                    <TextBlock Text="{Binding Path=Name}" Margin="5" />
                                                                </Expander.Header>

                                                                <ItemsPresenter />
                                                            </Expander>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ItemsControl.GroupStyle>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <CustomPanel Background="Transparent" AllowDrop="True">
                                            <CustomPanel.ItemsLocator>
                                                <locators:StackLocator Orientation="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.PanelOrientation, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.ItemsLocator>
                                            <CustomPanel.Handlers>
                                                <handlers:SelectRangeMouseHandler Selecting="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.Selecting}" 
                                                                                  Contains="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.RectContains}" />
                                                <handlers:MoveItemMouseHandler MoveUp="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.MoveUp}"
                                                                               StopOnMouseLeave="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.StopOnMouseLeave, UpdateSourceTrigger=PropertyChanged}"/>
                                            </CustomPanel.Handlers>
                                        </CustomPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            
                            <!--Simple panel-->
                            <CustomPanel Grid.Row="2" Background="Transparent" AllowDrop="True" >
                                <CustomPanel.ItemsLocator>
                                    <locators:StackLocator Orientation="{Binding Path=PanelOrientation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </CustomPanel.ItemsLocator>
                                <TextBlock Text="Simple textBlock" Margin="10" />
                                <Button Content="Simple button" Margin="10" />
                                <TextBox Text="Simple textBox" Margin="10" />
                            </CustomPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Wrap">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--Without grouping-->
                            <ItemsControl ItemsSource="{Binding Path=Values}" ItemTemplate="{StaticResource WithMarginItemTemplate}"
                              Margin="5" ScrollViewer.CanContentScroll="True">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <CustomPanel Background="Transparent" AllowDrop="True" >
                                            <CustomPanel.ItemsLocator>
                                                <locators:WrapLocator Orientation="{Binding Path=PanelOrientation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.ItemsLocator>
                                            <CustomPanel.Handlers>
                                                <handlers:SelectRangeMouseHandler Selecting="{Binding Path=Selecting}" 
                                                                                  Contains="{Binding Path=RectContains, UpdateSourceTrigger=PropertyChanged}" />
                                                <handlers:MoveItemMouseHandler MoveUp="{Binding Path=MoveUp}" 
                                                                               StopOnMouseLeave="{Binding Path=StopOnMouseLeave, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.Handlers>
                                        </CustomPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--With grouping-->
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding Path=View}" ItemTemplate="{StaticResource WithMarginItemTemplate}" 
                              Margin="5" >
                                <ItemsControl.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Expander IsExpanded="False" MaxHeight="200">
                                                                <Expander.Header>
                                                                    <TextBlock Text="{Binding Path=Name}" Margin="5" />
                                                                </Expander.Header>

                                                                <ItemsPresenter />
                                                            </Expander>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ItemsControl.GroupStyle>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <CustomPanel Background="Transparent" AllowDrop="True">
                                            <CustomPanel.ItemsLocator>
                                                <locators:WrapLocator Orientation="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.PanelOrientation, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.ItemsLocator>
                                            <CustomPanel.Handlers>
                                                <handlers:SelectRangeMouseHandler Selecting="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.Selecting}" 
                                                                                  Contains="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.RectContains}" />
                                                <handlers:MoveItemMouseHandler MoveUp="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.MoveUp}"
                                                                               StopOnMouseLeave="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.StopOnMouseLeave, UpdateSourceTrigger=PropertyChanged}"/>
                                            </CustomPanel.Handlers>
                                        </CustomPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--Simple panel-->
                            <CustomPanel Grid.Row="2" Background="Transparent" AllowDrop="True" >
                                <CustomPanel.ItemsLocator>
                                    <locators:WrapLocator Orientation="{Binding Path=PanelOrientation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </CustomPanel.ItemsLocator>
                                <TextBlock Text="Simple textBlock" Margin="10" />
                                <Button Content="Simple button" Margin="10" />
                                <TextBox Text="Simple textBox" Margin="10" />
                            </CustomPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Geometry path">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--Without grouping-->
                            <ItemsControl ItemsSource="{Binding Path=Values}" ItemTemplate="{StaticResource DefaultItemTeplate}" 
                                          Margin="5" ScrollViewer.CanContentScroll="True">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <CustomPanel Background="Transparent" AllowDrop="True" >
                                            <CustomPanel.ItemsLocator>
                                                <locators:PathLocator Orientation="{Binding Path=PanelOrientation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                      GeometryPath="{DynamicResource PathGeometry}" />
                                            </CustomPanel.ItemsLocator>
                                            <CustomPanel.Handlers>
                                                <handlers:SelectRangeMouseHandler Selecting="{Binding Path=Selecting}" 
                                                                                  Contains="{Binding Path=RectContains, UpdateSourceTrigger=PropertyChanged}" />
                                                <handlers:MoveItemMouseHandler MoveUp="{Binding Path=MoveUp}" 
                                                                               StopOnMouseLeave="{Binding Path=StopOnMouseLeave, UpdateSourceTrigger=PropertyChanged}" />
                                            </CustomPanel.Handlers>
                                        </CustomPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--With grouping-->
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding Path=View}" ItemTemplate="{StaticResource DefaultItemTeplate}" Margin="5" >
                                <ItemsControl.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Expander IsExpanded="False" >
                                                                <Expander.Header>
                                                                    <TextBlock Text="{Binding Path=Name}" Margin="5" />
                                                                </Expander.Header>

                                                                <ItemsPresenter />
                                                            </Expander>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ItemsControl.GroupStyle>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <CustomPanel Background="Transparent" AllowDrop="True">
                                            <CustomPanel.ItemsLocator>
                                                <locators:PathLocator Orientation="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.PanelOrientation, UpdateSourceTrigger=PropertyChanged}" 
                                                                      GeometryPath="{DynamicResource PathGeometry}"/>
                                            </CustomPanel.ItemsLocator>
                                            <CustomPanel.Handlers>
                                                <handlers:SelectRangeMouseHandler Selecting="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.Selecting}" 
                                                                                  Contains="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.RectContains}" />
                                                <handlers:MoveItemMouseHandler MoveUp="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.MoveUp}"
                                                                               StopOnMouseLeave="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.StopOnMouseLeave, UpdateSourceTrigger=PropertyChanged}"/>
                                            </CustomPanel.Handlers>
                                        </CustomPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--Simple panel-->
                            <CustomPanel Grid.Row="2" Background="Transparent" AllowDrop="True" >
                                <CustomPanel.ItemsLocator>
                                    <locators:PathLocator Orientation="{Binding Path=PanelOrientation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                      GeometryPath="{DynamicResource PathGeometry}" />
                                </CustomPanel.ItemsLocator>
                                <TextBlock Text="Simple textBlock" Margin="10" />
                                <Button Content="Simple button" Margin="10" />
                                <TextBox Text="Simple textBox" Margin="10" />
                            </CustomPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Chart">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="200" />
                            </Grid.ColumnDefinitions>
                            <CustomPanel >
                                <CustomPanel.ItemsLocator>
                                    <locators:ChartLocator x:Name="ChartLocator" >
                                        <locators:ChartLocator.Designers>
                                            <designers:CanvasOffsetDesigner />
                                            <designers:ZoomDesigner />
                                            <designers:AreaDesigner x:Name="Area" />
                                            <designers:ElementsPathLineDesigner x:Name="ElementsPath" />
                                            <designers:RulersDesigner x:Name="Ruler" AreaDesigner="{Binding ElementName=Area, Path=.}" AreaBorderBrush="Violet" />
                                            <designers:ShadowsDesigner x:Name="Shadows" />
                                        </locators:ChartLocator.Designers>
                                    </locators:ChartLocator>
                                </CustomPanel.ItemsLocator>
                                <CustomPanel.Handlers>
                                    <handlers:ChartItemMoveHandler />
                                    <handlers:ChartTranslationHandler />
                                </CustomPanel.Handlers>
                                <Ellipse Name="el1" Style="{DynamicResource ChartPointStyle}" locators:ChartLocator.Position="0.25, 0.25" />
                                <Ellipse Name="el2" Style="{DynamicResource ChartPointStyle}" Fill="Orange" locators:ChartLocator.Position="0.75, 0.25"  />
                                <Ellipse Name="el3" Style="{DynamicResource ChartPointStyle}" Fill="Violet" locators:ChartLocator.Position="0.75, 0.75"  />
                                <Ellipse Name="el4" Style="{DynamicResource ChartPointStyle}" Fill="Red" locators:ChartLocator.Position="0.25, 0.75"  />
                            </CustomPanel>

                            <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                <StackPanel>
                                    <TextBlock Text="Properties" FontWeight="Bold" Margin="5" HorizontalAlignment="Left" />
                                    <Expander Header="Area">
                                        <StackPanel>
                                            <CheckBox Margin="5" Content="Show area" IsChecked="{Binding ElementName=Area, Path=ShowArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            
                                            <TextBlock Text="Area fill:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Area, Path=AreaFill, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Area border brush:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Area, Path=AreaBorderBrush, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Area border thikness:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Area, Path=AreaBorderThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <CheckBox Margin="5" Content="Clip movement" IsChecked="{Binding ElementName=Area, Path=ClipMainArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                    <Expander Header="Line">
                                        <StackPanel>
                                            <CheckBox Margin="5" Content="Show line" IsChecked="{Binding ElementName=ElementsPath, Path=ShowLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <CheckBox Margin="5" Content="Close line" IsChecked="{Binding ElementName=ElementsPath, Path=ClosedLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <CheckBox Margin="5" Content="Filled line" IsChecked="{Binding ElementName=ElementsPath, Path=FilledLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Line fill:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=ElementsPath, Path=LineFill, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Line stroke:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=ElementsPath, Path=LineStroke, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Line thikness:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=ElementsPath, Path=LineThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                    <Expander Header="Rulers">
                                        <StackPanel>
                                            <CheckBox Margin="5" Content="Show vertical ruler" IsChecked="{Binding ElementName=Ruler, Path=ShowVerticalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Minimum of Vertical Ruler:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=MinimumVerticalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Maximum of Vertical Ruler:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=MaximumVerticalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Frequency of Vertical Ruler:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=FrequencyVerticalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <CheckBox Margin="5" Content="Show horizontal ruler" IsChecked="{Binding ElementName=Ruler, Path=ShowHorizontalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Minimum of Horizontal Ruler:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=MinimumHorizontalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Maximum of Horizontal Ruler:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=MaximumHorizontalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Frequency of Horizontal Ruler:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=FrequencyHorizontalRuler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <CheckBox Margin="5" Content="Ruler depends on Area" IsChecked="{Binding ElementName=Ruler, Path=RulerDependsOnArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Ruler fill:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=RulerFill, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Ruler width:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=RulerWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Ruler small height:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=RulerSmallHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Ruler height:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=RulerHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Ruler big frequency:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=RulerBigFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Area border brush:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Ruler, Path=AreaBorderBrush, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                    <Expander Header="Shadows">
                                        <StackPanel>
                                            <CheckBox Margin="5" Content="Use shadows:" IsChecked="{Binding ElementName=Shadows, Path=UseShadows, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Shadow fill:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Shadows, Path=ShadowFill, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Shadow stroke:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Shadows, Path=ShadowStroke, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <TextBlock Text="Shadow stroke thickness:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=Shadows, Path=ShadowStrokeThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>

                                    <TextBlock Text="Points" FontWeight="Bold" Margin="5" HorizontalAlignment="Left" />

                                    <Expander Header="Point 1">
                                        <StackPanel>
                                            <TextBlock Text="Value:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=el1, Path=(locators:ChartLocator.Position), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Move Type:" Margin="5" HorizontalAlignment="Left" />
                                            <ComboBox Margin="20, 5, 5, 5" ItemsSource="{DynamicResource MoveTypesList}" SelectedItem="{Binding ElementName=el1, Path=(handlers:ChartItemMoveHandler.MoveType), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>

                                    <Expander Header="Point 2">
                                        <StackPanel>
                                            <TextBlock Text="Value:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=el2, Path=(locators:ChartLocator.Position), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Move Type:" Margin="5" HorizontalAlignment="Left" />
                                            <ComboBox Margin="20, 5, 5, 5" ItemsSource="{DynamicResource MoveTypesList}" SelectedItem="{Binding ElementName=el2, Path=(handlers:ChartItemMoveHandler.MoveType), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>

                                    <Expander Header="Point 3">
                                        <StackPanel>
                                            <TextBlock Text="Value:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=el3, Path=(locators:ChartLocator.Position), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Move Type:" Margin="5" HorizontalAlignment="Left" />
                                            <ComboBox Margin="20, 5, 5, 5" ItemsSource="{DynamicResource MoveTypesList}" SelectedItem="{Binding ElementName=el3, Path=(handlers:ChartItemMoveHandler.MoveType), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>

                                    <Expander Header="Point 4">
                                        <StackPanel>
                                            <TextBlock Text="Value:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=el4, Path=(locators:ChartLocator.Position), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Move Type:" Margin="5" HorizontalAlignment="Left" />
                                            <ComboBox Margin="20, 5, 5, 5" ItemsSource="{DynamicResource MoveTypesList}" SelectedItem="{Binding ElementName=el4, Path=(handlers:ChartItemMoveHandler.MoveType), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Diagram">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="200" />
                            </Grid.ColumnDefinitions>
                            <CustomPanel Width="220" Height="220" Margin="2">
                                <CustomPanel.ItemsLocator>
                                    <locators:DiagramLocator x:Name="DiagramLocator" InnerRadius="10" OuterRadius="90" />
                                </CustomPanel.ItemsLocator>

                                <ContentControl Template="{DynamicResource DiagramTemplate}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                    locators:DiagramHelper.Value="50"
                                    locators:DiagramHelper.Minimum="0"
                                    locators:DiagramHelper.Maximum="100"
                                    locators:DiagramHelper.Legend="Legends" />
                                <ContentControl Template="{DynamicResource DiagramTemplate}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                    locators:DiagramHelper.Value="50"
                                    locators:DiagramHelper.Minimum="0"
                                    locators:DiagramHelper.Maximum="100"
                                    locators:DiagramHelper.Legend="Legends" />
                                <ContentControl Template="{DynamicResource DiagramTemplate}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                    locators:DiagramHelper.Value="50"
                                    locators:DiagramHelper.Minimum="0"
                                    locators:DiagramHelper.Maximum="100"
                                    locators:DiagramHelper.Legend="Legends" />
                                <ContentControl Template="{DynamicResource DiagramTemplate}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                    locators:DiagramHelper.Value="50"
                                    locators:DiagramHelper.Minimum="0"
                                    locators:DiagramHelper.Maximum="100"
                                    locators:DiagramHelper.Legend="Legends" />
                                <ContentControl Template="{DynamicResource DiagramTemplate}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                    locators:DiagramHelper.Value="50"
                                    locators:DiagramHelper.Minimum="0"
                                    locators:DiagramHelper.Maximum="100"
                                    locators:DiagramHelper.Legend="Legends" />
                                <ContentControl Template="{DynamicResource DiagramTemplate}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                    locators:DiagramHelper.Value="50"
                                    locators:DiagramHelper.Minimum="0"
                                    locators:DiagramHelper.Maximum="100"
                                    locators:DiagramHelper.Legend="Legends" />
                            </CustomPanel>

                            <ScrollViewer Grid.Column="1">
                                <StackPanel>
                                    <TextBlock Text="Properties" FontWeight="Bold" Margin="5" HorizontalAlignment="Left" />
                                    <Expander Header="Main">
                                        <StackPanel>
                                            <CheckBox Margin="5" Content="Show middle line" IsChecked="{Binding ElementName=DiagramLocator, Path=ShowMiddleLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Fill:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=DiagramLocator, Path=Fill, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Stroke:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=DiagramLocator, Path=Stroke, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Stroke thikness:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=DiagramLocator, Path=StrokeThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                    <Expander Header="Diagram">
                                        <StackPanel>
                                            <TextBlock Text="Fill:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=DiagramLocator, Path=DiagramFill, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Stroke:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=DiagramLocator, Path=DiagramStroke, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Stroke thikness:" Margin="5" HorizontalAlignment="Left" />
                                            <TextBox Margin="20, 5, 5, 5" Text="{Binding ElementName=DiagramLocator, Path=DiagramStrokeThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="Diagram opacity:" Margin="5" HorizontalAlignment="Left" />
                                            <Slider Margin="20, 5, 5, 5" Minimum="0" Maximum="1" Value="{Binding ElementName=DiagramLocator, Path=DiagramOpacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Exclude">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="200" />
                            </Grid.ColumnDefinitions>

                            <CustomPanel>
                                
                            </CustomPanel>
                            
                            <ScrollViewer Grid.Column="1">
                                <StackPanel >
                                    
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                </TabControl>

                <StackPanel Grid.Column="1">
                    <TextBlock Text="Panel orientation:" Margin="5" HorizontalAlignment="Left" />
                    <ComboBox Margin="20, 5, 5, 5" ItemsSource="{DynamicResource OrientationList}" SelectedItem="{Binding Path=PanelOrientation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Margin="5">
                        <Run Text="Handlers:" />
                        <LineBreak />
                        <Run Text="- Move items" />
                        <LineBreak />
                        <CheckBox Content="Stop on leave" IsChecked="{Binding Path=StopOnMouseLeave, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="20, 0, 0, 0" />
                        <LineBreak />
                        
                        <Run Text="- Rectabgle selecting items" />
                        <LineBreak />
                        <CheckBox Content="Contains" IsChecked="{Binding Path=RectContains, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="20, 0, 0, 0" />
                    </TextBlock>
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
